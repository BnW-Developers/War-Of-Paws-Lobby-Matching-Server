syntax = "proto3";

// TODO: 게임 데이터 명세가 필요하다면 추가해야 함.

/*
  게임 데이터 명세
*/
message Position {
  float x = 1;
  float z = 2;
}

message Rotation {
  float y = 1;
}

message UnitPosition {
  int32 unitId = 1;
  Position position = 2;
  Rotation rotation = 3;
}

message UnitInfo {
  int32 unitId = 1;
  int32 unitHp = 2;
}

/* 
  패킷 명세
*/
message S2CErrorNotification {
  int32 errorCode = 1;
  string errorMessage = 2;
}

message C2SAuthRequest {
  string token = 1;
}

message S2CAuthResponse {
}

message C2SGameStartRequest {
  int64 timestamp = 1;
}

message S2CGameStartNotification {
  string species = 1;
}

message C2SPurchaseBuildingRequest {
  int32 assetId = 1;
}

message S2CPurchaseBuildingResponse {
  int32 assetId = 1;
}

message S2CAddEnemyBuildingNotification {
  int32 assetId = 1;
}

message C2SSpawnUnitRequest {
  int32 assetId = 1;
  int64 timestamp = 2;
  bool toTop = 3;
}

message S2CSpawnUnitResponse {
  int32 assetId = 1;
  int32 unitId = 2;
  bool toTop = 3;
}

message S2CSpawnEnemyUnitNotification {
  int32 assetId = 1;
  int32 unitId = 2;
  bool toTop = 3;
}

message C2SAttackUnitRequest {
  int32 unitId = 1;
  int64 timestamp = 2;
  repeated int32 opponentUnitIds = 3;
}

message S2CAttackUnitResponse {
  repeated UnitInfo unitInfos = 1;
}

message S2CEnemyUnitAttackNotification {
  repeated UnitInfo unitInfos = 1;
}

message S2CUnitDeathNotification {
  repeated int32 unitIds = 1;
}

message S2CEnemyUnitDeathNotification {
  repeated int32 unitIds = 1;
}

message C2SEnterCheckpointNotification {
  int32 unitId = 1;
}

message C2SExitCheckpointNotification {
  int32 unitId = 1;
}

message S2CTryOccupationNotification {
  bool isTop = 1;
  bool isOpponent = 2;
}

message S2CPauseOccupationNotification {
  bool isTop = 1;
}

message S2COccupationTimerResetNotification {
  bool isTop = 1;
}

message S2COccupationSuccessNotification {
  bool isTop = 1;
  bool isOpponent = 2;
}

message C2SAttackBaseRequest {
  int32 unitId = 1;
}

message S2CAttackBaseResponse {
  int32 baseHp = 1;
}

message S2CBaseAttackedNotification {
  int32 baseHp = 1;
}

message S2CGameOverNotification {
  bool isWin = 1;
}

message C2SGameEndNotification {
}

message C2SLocationNotification {
  repeated UnitPosition unitPositions = 1;
  int64 timestamp = 2;
}

message S2CLocationSyncNotification {
  repeated UnitPosition unitPositions = 1;
}

message S2CMineralSyncNotification {
  int32 mineral = 1;
}

message C2SHealUnitRequest {
  int32 unitId = 1;
  int64 timestamp = 2;
  int32 targetId = 3;
  int32 healAmount = 4;
}

message S2CHealUnitResponse {
  int32 unitId = 1;
  int32 unitHp = 2;
}

message S2CEnemyHealUnitNotification {
  int32 unitId = 1;
  int32 unitHp = 2;
}

message C2SBuffUnitRequest {
  int32 unitId = 1;
  int64 timestamp = 2;
  repeated int32 targetIds = 3;
  int32 buffAmount = 4;
  int32 buffDuration = 5;
}

message S2CBuffUnitResponse {
  repeated int32 unitIds = 1;
  int32 buffAmount = 2;
  int32 buffDuration = 3;
}

message S2CEnemyBuffUnitNotification {
  repeated int32 unitIds = 1;
  int32 buffAmount = 2;
  int32 buffDuration = 3;
}

message C2SUnitAnimationNotification {
  int32 unitId = 1;
  int32 animationId = 2;
}

message S2CEnemyUnitAnimationNotification {
  int32 unitId = 1;
  int32 animationId = 2;
}

message C2SMatchRequest {
  string species = 1;
}

message S2CMatchNotification {
  string opponentId = 1;
}

message C2SMatchCancelRequest {
}


/*
  최상위 GamePacket 메시지
*/
message GamePacket {
  oneof payload {
    // 에러
    S2CErrorNotification errorNotification = 1;

    // 인증
    C2SAuthRequest authRequest = 2;
    S2CAuthResponse authResponse = 3;

    // 게임 시작
    C2SGameStartRequest gameStartRequest = 4;
    S2CGameStartNotification gameStartNotification = 5;

    // 건물 구매
    C2SPurchaseBuildingRequest purchaseBuildingRequest = 6;
    S2CPurchaseBuildingResponse purchaseBuildingResponse = 7;
    S2CAddEnemyBuildingNotification addEnemyBuildingNotification = 8;
    
    // 유닛 생성
    C2SSpawnUnitRequest spawnUnitRequest = 9;
    S2CSpawnUnitResponse spawnUnitResponse = 10;
    S2CSpawnEnemyUnitNotification spawnEnemyUnitNotification = 11;

    // 유닛 공격
    C2SAttackUnitRequest attackUnitRequest = 12;
    S2CAttackUnitResponse attackUnitResponse = 13;
    S2CEnemyUnitAttackNotification enemyUnitAttackNotification = 14;

    // 유닛 사망
    S2CUnitDeathNotification unitDeathNotification = 15;
    S2CEnemyUnitDeathNotification enemyUnitDeathNotification = 16;

    // 체크포인트 점령
    C2SEnterCheckpointNotification enterCheckpointNotification = 17;
    C2SExitCheckpointNotification exitCheckpointNotification = 18;
    S2CTryOccupationNotification tryOccupationNotification = 19;
    S2CPauseOccupationNotification pauseOccupationNotification = 20;
    S2COccupationTimerResetNotification occupationTimerResetNotification = 21;
    S2COccupationSuccessNotification occupationSuccessNotification = 22;

    // 성채공격
    C2SAttackBaseRequest attackBaseRequest = 23;
    S2CAttackBaseResponse attackBaseResponse = 24;
    S2CBaseAttackedNotification baseAttackedNotification = 25;

    // 게임 종료
    S2CGameOverNotification gameOverNotification = 26;
    C2SGameEndNotification gameEndNotification = 27;

    // 위치 동기화
    C2SLocationNotification locationNotification = 28;
    S2CLocationSyncNotification locationSyncNotification = 29;

    // 미네랄 동기화
    S2CMineralSyncNotification mineralSyncNotification = 30;

    // Heal 관련
    C2SHealUnitRequest healUnitRequest = 31;
    S2CHealUnitResponse healUnitResponse = 32;
    S2CEnemyHealUnitNotification enemyHealUnitNotification = 33;

    // Buff 관련
    C2SBuffUnitRequest buffUnitRequest = 34;
    S2CBuffUnitResponse buffUnitResponse = 35;
    S2CEnemyBuffUnitNotification enemyBuffUnitNotification = 36;

    // 애니메이션 관련
    C2SUnitAnimationNotification unitAnimationNotification = 37;
    S2CEnemyUnitAnimationNotification enemyUnitAnimationNotification = 38;

    // 매칭 관련
    C2SMatchRequest matchRequest = 50;
    S2CMatchNotification matchNotification = 51;
    C2SMatchCancelRequest matchCancelRequest = 52;
  }
}



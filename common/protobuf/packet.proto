syntax = "proto3";

// TODO: 게임 데이터 명세가 필요하다면 추가해야 함.

/*
  게임 데이터 명세
*/
message Position {
  float x = 1;
  float z = 2;
}

message Rotation {
  float y = 1;
}

message UnitPosition {
  int32 unitId = 1;
  Position position = 2;
  Rotation rotation = 3;
}

message UnitInfo {
  int32 unitId = 1;
  int32 unitHp = 2;
}

/* 
  패킷 명세
*/
message S2CErrorNotification {
  int32 errorCode = 1;
  string errorMessage = 2;
}

message C2SAuthRequest {
  string token = 1;
}

message S2CAuthResponse {
}

message C2SMatchRequest {
  string species = 1;
}

message S2CMatchNotification {
  string opponentId = 1;
  int32 port = 2;
}

message C2SMatchCancelRequest {
}

message C2SGameStartRequest {
}

message S2CGameStartNotification {
  string species = 1;
}

message C2SPurchaseBuildingRequest {
  int32 assetId = 1;
}

message S2CPurchaseBuildingResponse {
  int32 assetId = 1;
}

message S2CAddEnemyBuildingNotification {
  int32 assetId = 1;
}

message C2SSpawnUnitRequest {
  int32 assetId = 1;
  bool toTop = 2;
}

message S2CSpawnUnitResponse {
  int32 assetId = 1;
  int32 unitId = 2;
  bool toTop = 3;
}

message S2CSpawnEnemyUnitNotification {
  int32 assetId = 1;
  int32 unitId = 2;
  bool toTop = 3;
}

message C2SAttackUnitRequest {
  int32 unitId = 1;
  repeated int32 opponentUnitIds = 2;
}

message S2CAttackUnitResponse {
  repeated UnitInfo unitInfos = 1;
}

message S2CEnemyUnitAttackNotification {
  repeated UnitInfo unitInfos = 1;
}

message S2CUnitDeathNotification {
  repeated int32 unitIds = 1;
}

message S2CEnemyUnitDeathNotification {
  repeated int32 unitIds = 1;
}

message C2SEnterCheckpointNotification {
  int32 unitId = 1;
}

message C2SExitCheckpointNotification {
  int32 unitId = 1;
}

message S2CTryOccupationNotification {
  bool isTop = 1;
  bool isOpponent = 2;
}

message S2CPauseOccupationNotification {
  bool isTop = 1;
}

message S2COccupationTimerResetNotification {
  bool isTop = 1;
}

message S2COccupationSuccessNotification {
  bool isTop = 1;
  bool isOpponent = 2;
}

message C2SAttackBaseRequest {
  int32 unitId = 1;
}

message S2CAttackBaseResponse {
  int32 baseHp = 1;
}

message S2CBaseAttackedNotification {
  int32 baseHp = 1;
}

message S2CGameOverNotification {
  bool isWin = 1;
}

message C2SGameEndNotification {
}

message C2SLocationNotification {
  repeated UnitPosition unitPositions = 1;
  int64 timestamp = 2;
}

message S2CLocationSyncNotification {
  repeated UnitPosition unitPositions = 1;
}

message S2CMineralSyncNotification {
  int32 mineral = 1;
}

message C2SHealUnitRequest {
  int32 unitId = 1;
  int32 targetId = 2;
  int32 healAmount = 3;
}

message S2CHealUnitResponse {
  int32 unitId = 1;
  int32 unitHp = 2;
}

message S2CEnemyHealUnitNotification {
  int32 unitId = 1;
  int32 unitHp = 2;
}

message C2SBuffUnitRequest {
  int32 unitId = 1;
  repeated int32 targetIds = 2;
  int32 buffAmount = 3;
  int32 buffDuration = 4;
}

message S2CBuffUnitResponse {
  repeated int32 unitIds = 1;
  int32 buffAmount = 2;
  int32 buffDuration = 3;
}

message S2CEnemyBuffUnitNotification {
  repeated int32 unitIds = 1;
  int32 buffAmount = 2;
  int32 buffDuration = 3;
}

message C2SUnitAnimationNotification {
  int32 unitId = 1;
  int32 animationId = 2;
}

message S2CEnemyUnitAnimationNotification {
  int32 unitId = 1;
  int32 animationId = 2;
}

message C2SDrawCardRequest {
  int32 buttonType = 1;
}

message S2CDrawCardResponse {
  int32 assetId = 1;
}

message S2CEliteCardNotification {
  int32 consumedAssetId = 1;
  int32 eliteAssetId = 2;
}
 
message C2SAttackSpellRequest {
  Position center = 1;
  repeated int32 unitIds = 2;
}

message S2CAttackSpellResponse {
  repeated UnitInfo unitInfos = 1;
}

message S2CEnemyAttackSpellNotification {
  repeated UnitInfo unitInfos = 1;
}

message C2SHealSpellRequest {
  Position center = 1;
  repeated int32 unitIds = 2;
}

message S2CHealSpellResponse {
  repeated UnitInfo unitInfos = 1;
}

message S2CEnemyHealSpellNotification {
  repeated UnitInfo unitInfos = 1;
}

message C2SBuffSpellRequest {
  Position center = 1;
  repeated int32 unitIds = 2;
}

message S2CBuffSpellResponse {
  repeated int32 unitIds = 1;
  int32 buffAmount = 2;
  int32 buffDuration = 3;
}

message S2CEnemyBuffSpellNotification {
  repeated int32 unitIds = 1;
  int32 buffAmount = 2;
  int32 buffDuration = 3;
}

message C2SStunSpellRequest {
  Position center = 1;
  repeated int32 unitIds = 2;
}

message S2CStunSpellResponse {
  repeated int32 unitIds = 1;
  int32 stunDuration = 2;
}

message S2CEnemyStunSpellNotification {
  repeated int32 unitIds = 1;
  int32 stunDuration = 2;
}


/*
  최상위 GamePacket 메시지
*/
message GamePacket {
  oneof payload {
    // 에러
    S2CErrorNotification errorNotification = 1;

    // 인증
    C2SAuthRequest authRequest = 2;
    S2CAuthResponse authResponse = 3;

    // 매칭
    C2SMatchRequest matchRequest = 30;
    S2CMatchNotification matchNotification = 31;
    C2SMatchCancelRequest matchCancelRequest = 32;

    // 게임 시작
    C2SGameStartRequest gameStartRequest = 80;
    S2CGameStartNotification gameStartNotification = 81;

    // 건물 구매
    C2SPurchaseBuildingRequest purchaseBuildingRequest = 100;
    S2CPurchaseBuildingResponse purchaseBuildingResponse = 101;
    S2CAddEnemyBuildingNotification addEnemyBuildingNotification = 102;
    
    // 유닛 생성
    C2SSpawnUnitRequest spawnUnitRequest = 200;
    S2CSpawnUnitResponse spawnUnitResponse = 201;
    S2CSpawnEnemyUnitNotification spawnEnemyUnitNotification = 202;

    // 유닛 공격
    C2SAttackUnitRequest attackUnitRequest = 300;
    S2CAttackUnitResponse attackUnitResponse = 301;
    S2CEnemyUnitAttackNotification enemyUnitAttackNotification = 302;

    // 유닛 사망
    S2CUnitDeathNotification unitDeathNotification = 400;
    S2CEnemyUnitDeathNotification enemyUnitDeathNotification = 401;

    // 체크포인트 점령
    C2SEnterCheckpointNotification enterCheckpointNotification = 500;
    C2SExitCheckpointNotification exitCheckpointNotification = 501;
    S2CTryOccupationNotification tryOccupationNotification = 502;
    S2CPauseOccupationNotification pauseOccupationNotification = 503;
    S2COccupationTimerResetNotification occupationTimerResetNotification = 504;
    S2COccupationSuccessNotification occupationSuccessNotification = 505;

    // 성채공격
    C2SAttackBaseRequest attackBaseRequest = 600;
    S2CAttackBaseResponse attackBaseResponse = 601;
    S2CBaseAttackedNotification baseAttackedNotification = 602;

    // 게임 종료
    S2CGameOverNotification gameOverNotification = 700;
    C2SGameEndNotification gameEndNotification = 701;

    // 위치 동기화
    C2SLocationNotification locationNotification = 800;
    S2CLocationSyncNotification locationSyncNotification = 801;

    // 미네랄 동기화
    S2CMineralSyncNotification mineralSyncNotification = 900;

    // Heal 관련
    C2SHealUnitRequest healUnitRequest = 1000;
    S2CHealUnitResponse healUnitResponse = 1001;
    S2CEnemyHealUnitNotification enemyHealUnitNotification = 1002;

    // Buff 관련
    C2SBuffUnitRequest buffUnitRequest = 1100;
    S2CBuffUnitResponse buffUnitResponse = 1101;
    S2CEnemyBuffUnitNotification enemyBuffUnitNotification = 1102;

    // 애니메이션 관련
    C2SUnitAnimationNotification unitAnimationNotification = 1200;
    S2CEnemyUnitAnimationNotification enemyUnitAnimationNotification = 1201;

    // 카드 관련
    C2SDrawCardRequest drawCardRequest = 1300;
    S2CDrawCardResponse drawCardResponse = 1301;
    S2CEliteCardNotification eliteCardNotification = 1302;

    // 공격 스펠
    C2SAttackSpellRequest attackSpellRequest = 1400;
    S2CAttackSpellResponse attackSpellResponse = 1401;
    S2CEnemyAttackSpellNotification enemyAttackSpellNotification = 1402;

    // 힐 스펠
    C2SHealSpellRequest healSpellRequest = 1403;
    S2CHealSpellResponse healSpellResponse = 1404;
    S2CEnemyHealSpellNotification enemyHealSpellNotification = 1405;

    // 버프 스펠
    C2SBuffSpellRequest buffSpellRequest = 1406;
    S2CBuffSpellResponse buffSpellResponse = 1407;
    S2CEnemyBuffSpellNotification enemyBuffSpellNotification = 1408;
    
    // 스턴 스펠
    C2SStunSpellRequest stunSpellRequest = 1409;
    S2CStunSpellResponse stunSpellResponse = 1410;
    S2CEnemyStunSpellNotification enemyStunSpellNotification = 1411;
  }
}


